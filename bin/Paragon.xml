<?xml version="1.0"?>
<doc>
<assembly>
<name>
Paragon
</name>
</assembly>
<members>
<member name="P:Paragon.My.Resources.Resource1.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:Paragon.My.Resources.Resource1.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:Paragon.My.Resources.Resource1">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="M:Paragon.FileManager.File.PrintToFile(System.String,System.String,System.Boolean)">
	<summary>
 Prints information to a text file, it just adds it to it 
 </summary>
	<param name="msg">The message you wish to insert into the file</param>
	<param name="fullfilePath">Must include file name and the extention</param>
	<param name="AppendToFile">True if you want to add to the specified file  and false if you want to override it </param>
	<remarks></remarks>
</member><member name="M:Paragon.FileManager.File.DeleteFile(System.String)">
	<summary>
 Deletes the specified file
 </summary>
	<param name="filePath">Full path to the file</param>
	<remarks>Throws exception if file doesn't exist</remarks>
</member><member name="M:Paragon.Database.StoredProcedure.RunStoredProcedure(System.String,System.String,System.Collections.Hashtable)">
	<summary>
 Executes the specified sotred procedure
 </summary>
	<param name="conString"> Connection string used to connect to the database</param>
	<param name="storedProcedureName">The Name of the stored procedure you are executing</param>
	<param name="parameters">Optional: parameters to pass into the stored procedure, key is the name and value is the value you are passing i.e. key: @customerName value: "fred" </param>
	<returns>DataSet containing any tables returned</returns>
	<remarks></remarks>
</member><member name="M:Paragon.Email.AlertTemplates.BasicAlertEmailTemplate(Paragon.Email.AlertTemplates.AlarmLevel,System.String)">
	<summary>
 Creates a basic alert email with the main message surrond with the appropriate alert colour
 </summary>
	<param name="alarmLvl">The level you wish the email template to be created at</param>
	<param name="mainMessage"></param>
	<returns>Array containing msg subject in index 0 and msg body in index 1</returns>
	<remarks></remarks>
</member><member name="T:Paragon.Email.AlertTemplates.AlarmLevel">
	<summary>
 Enum indicating the levels available
 </summary>
	<remarks></remarks>
</member><member name="M:Paragon.Database.CSV.DataSetToCSVString(System.Data.DataSet,System.Int32,System.String[])">
	<summary>
 Converts DataSet To CSV String
 </summary>
	<param name="ds">Enter dataset</param>
	<param name="tableIndex">The table Index you wish to parse</param>
	<param name="tableHeaders">The table headers you wish to have</param>
	<returns>String of table as csv</returns>
	<remarks>Must be the same number of table headers as columns if there is a</remarks>
</member>
</members>
</doc>